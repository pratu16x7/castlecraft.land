$page-font-name: "Nunito";
$page-max-width: 920px;
$page-hori-padding: 8%;
$big-screen-font-size: 20px;
$small-screen-font-size: 16px;
$small-font-size: 0.8em;

$section-margin: 3em auto;
$small-screen-section-margin: 2em auto;
$section-padding: 3% 6%;

$menu-margin: 0 1em;
$menu-margin-small: 0 0.3em;
$logo-width: 5.5em;
$image-margin: 1em 0;
$image-border: 0.1em solid white;
$co-heading-spacing: 0.3em;

$paper-colors: "yellow", "brown", "sepia", "green";

// Colors
$grey1: #f4f5f1;
$grey2: #989898;
$max-black: #3d3d3d;
$timon-eyes-light-brown: #ecc9b1;
$timon-nose-deep-brown: #ac8a75;
$timon-ears-med-brown: #dbb69b;

// Decorations
$shadow-thin: 0px 2px 2px 1px rgba(0, 0, 0, 0.1);
$fade-opacity: 0.5;
$link-underline-border: 2px dotted $max-black;

// Font setup
@font-face {
    font-family: $page-font-name;
    src: url("/fonts/Nunito/Nunito-Regular.ttf") format("truetype");
    font-style: normal;
    font-weight: 400;
}

@font-face {
    font-family: $page-font-name;
    src: url("/fonts/Nunito/Nunito-Bold.ttf") format("truetype");
    font-weight: 700;
}

@font-face {
    font-family: $page-font-name;
    src: url("/fonts/Nunito/Nunito-Light.ttf") format("truetype");
    font-weight: 300;
}

// Resets
// TODO: try a reset + unreset(https://cssdeck.com/blog/scripts/vanilla-css-un-reset/) combo 
a, a:hover, a:focus, a:active {
    color: inherit; 
    text-decoration: none;
    outline: 0;
}

ul, ol {
    list-style: none;
    padding: 0;
    margin: 0;
}

img {
    width: 100%;
}

:is(article, aside, nav, section) h1 {
    font-size: 2em
}

// Begin styles
body {
    margin: 0 auto;
    padding: 0 $page-hori-padding;
    font-family: $page-font-name, "Helvetica", "Arial", "sans-serif";
    font-size: $big-screen-font-size;
    color: $max-black;
    line-height: 2em;
    
    max-width: $page-max-width;

	.image-short img { 
		width: 70%;
		margin: 1em auto; 
	}

    .min-width-logo, .min-width-note, .single-col{
        display: none;
    }

    @media screen and (max-width: 900px) {
        padding: 0;

        .max-width-logo, .max-width-note, .double-col { display: none; }
        .min-width-logo, .min-width-note, .single-col { display: block; }
        .min-width-logo, header, footer { margin: $small-screen-section-margin; }
        .min-width-note {margin-left: 1em;}

		.image-short img {  width: 80%; }
    }

    @media screen and (max-width: 640px) {
        font-size: $small-screen-font-size;

        .paper img { border: none; }
		.image-short img {  width: 100%; }
    }
    
    @media screen and (max-width: 460px) {
        nav ul li { margin: $menu-margin-small; }
		.image-short img {  width: 100%; }
    }
}



header, footer {
    margin: $section-margin;
    text-align: center;
    color: $grey2;
}

h3 {
    color: $grey2;
    font-size: 1.1em;
    font-weight: 400;
    line-height: 1.5em;
    font-style: italic;
}

hgroup {
    h1 { margin-bottom: $co-heading-spacing; }
    h2 { margin-top: $co-heading-spacing; }

    h2 { margin-bottom: $co-heading-spacing; }
    h3 { margin-top: $co-heading-spacing; }
}

// Link styles 
p a { border-bottom: $link-underline-border; }
p a:hover, p a:focus, p a:active { opacity: $fade-opacity; }
nav ul li {
    display: inline-block;
    margin: $menu-margin;
    &.active, a:hover { color: $max-black; }
    &.active { font-weight: 700; }
}

//.max-width-logo img 
.logo {
    width: $logo-width;
    vertical-align: middle;
}

// The "Paper" style
// General variations: Color, border-shape (jagged, scored, etc)
// Specific variations: paper-type
.paper {

    padding: $section-padding;

    //box-shadow: $shadow-thin;

    //drop-shadow, which seamlessly works on pseudo-elements
    // TODO: Fix red paper's shadow
    -webkit-filter: drop-shadow(0px 3px 4px rgba(0,0,0,0.1));
    filter        : drop-shadow(0px 3px 4px rgba(0,0,0,0.1));
    -ms-filter    : "progid:DXImageTransform.Microsoft.Dropshadow(OffX=0, OffY=2, Color='#444')";
    filter        : "progid:DXImageTransform.Microsoft.Dropshadow(OffX=0, OffY=2, Color='#444')";

    background-image: linear-gradient(rgba(255, 0, 0, 0), rgba(255, 0, 0, 0.08)),
        url("/images/watercolor.png");
    // TODO: There exist different types of paper elements, try and use them.

    @each $paper-color in $paper-colors {
        &.#{$paper-color} { background-image: url("/images/paper_patt_" + $paper-color + ".png"); }
       // &.#{$paper-color} { background-image: linear-gradient(rgba(255, 0, 0, 0), rgba(255, 0, 0, 0.08)), url("/images/lightpaperfibers_2X.png"); }
    }

    //jagged borders
    position: relative;
    &:before, &:after {
        position: absolute;
        background-color: #fff;
        content: "";
        height: 0.25rem;
        left: 0;
        right: 0;
        // TODO: Try for longer jags
        // TODO: try for left and right side instead of top and bottom
        // TODO: try randomizing with Sass so each jagg is different, or atleast have 4-5 different variations, or atleast different variations for top vs. bottom, and left vs. right so they don't match side by side
//        clip-path: polygon(0% 0%, 5% 100%, 10% 0%, 15% 100%, 20% 0%, 25% 100%, 30% 0%, 35% 100%, 40% 0%, 45% 100%, 50% 0%, 55% 100%, 60% 0%, 65% 100%, 70% 0%, 75% 100%, 80% 0%, 85% 100%, 90% 0%, 95% 100%, 100% 0%);
    }

    &:before {
        top: 0;
    }
    &:after {
        bottom: -0.20rem;
        // TODO: should be whichever paper color is selected
        background-image: linear-gradient(rgba(255, 0, 0, 0.08), rgba(255, 0, 0, 0.08)),
url("/images/watercolor.png");
    }

    img {
        display: block;
        margin: $image-margin;
        border: $image-border;
        box-shadow: $shadow-thin;
    }

    img + em, img + p {
        font-size: $small-font-size;
        display: block;
        text-align: center;
        color: $grey2;
    }

    ul, ol {
        list-style: initial;
        padding-left: 2em;
    }
}

section ul li {
    margin-bottom: 1em;
}

.col-container {
    display: flex;
    ul { flex: 1; }
    ul:nth-child(2) {margin-left: 1em;}
    p {
        font-size: 0.9em;
        line-height: initial;
    }
}

small { font-size: $small-font-size; }

p:empty {display:none;}
